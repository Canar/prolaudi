#!/usr/bin/env swipl
% vim: ft=prolog:noet:ts=4:sw=4
:-	initialization(main,main)
,	use_module(library(protobufs))
,	use_module(library(yall))
,	set_stream(user_output,type(binary))
%,	set_prolog_flag(stack_limit, 2_147_483_648)
.

rate(44100).

%signal/3 - handles Len calculation
%signal([],_,_).
signal(S,Freq,Len):-
	rate(Rate),
	Samples is truncate(Rate*Len),
	signal(S,0,Samples,Freq).

%signal/4 - samples
signal([],Si,Sa,_):-Si >= Sa,!.
signal([Sample|T],SIndex,Samples,Freq):-
	rate(Rate),
	key(Key),
	Sample is sin( Freq * Key * SIndex / Rate *pi*2),
	SIndexN is SIndex+1,
	signal(T,SIndexN,Samples,Freq).

timetone(Time,Tone,L,[Tone,M]):-
    number(L),
	number(M),
	number(Tone),
    Time is L * M.

timetone(Time,Tone,Time,Tone):- %tone info only
	number(Time),
	number(Tone).

hinhout(Hin,Hout):-
	Hout is 2 ** (Hin / 12).

ostfm0([Ho,L],[Hi,L]):-hinhout(Hi,Ho).
ostfm0(Ho,Hi):-hinhout(Hi,Ho).
	
note0(Ost,Chromatic,Scaled):-
	ost(Ost,O),
	length(O,Ostlen),
	Octave is div(Scaled,Ostlen),
	Offset is mod(Scaled,Ostlen),
	nth0(Offset,O,Ostval),
	Chromatic is Octave*12 + Ostval.
	
note1(Ost,[Chromatic,L],[Scaled,L]):-
	note1(Ost,Chromatic,Scaled).
note1(Ost,Chromatic,sharp(Scaled)):-
	note0(Ost,Ca,Scaled),
	Chromatic is Ca + 1.
note1(Ost,Chromatic,flat(Scaled)):-
	note0(Ost,Ca,Scaled),
	Chromatic is Ca - 1.
note1(Ost,Chromatic,Scaled):-
	note0(Ost,Chromatic,Scaled).

pnotes(_,[],[]).
%pnotes(Ost,[Hf|Tf],[Hn|Tn]):-

main(_):-
	%Len is 10.0,
	get_time(StartTime),

	TuneName=holyholyholy,
	tune(TuneName,Tune),
	tunescale(TuneName,Scale,Key,Notelen),
	assert(key(Key)),
	assert(notelen(Notelen)),

	maplist([Tm]>>(
		note1(Scale,Nm,Tm),
		ostfm0(Fm,Nm),
		notelen(L),
		timetone(Time,Tone,L,Fm),
		signal(S,Tone,Time),
		maplist([Sm]>>(
			protobufs:float32_codes(Sm,Cm),
			maplist(put_byte(user_output),Cm)
		),S)
	),Tune),
	
	get_time(EndTime),
	TakenTime is EndTime-StartTime,
	%Rate is Len / TakenTime,
	maplist(write(user_error),[
		'Time taken: ',TakenTime,"\n"
	%	'Rate: ',Rate,"\n"
	]),
	!.

tunescale(jesuslovesme,pentatonic,432,1r2).
tunescale(holyholyholy,phrygian,432r4,1r12).

tune(jesuslovesme,[ %scaled, timed
3,2,2,1,2,3,[3,2],
4,4,5,4,4,3,[3,2],
3,2,2,1,2,3,[3,2],
4,4,3,0,2,1,[0,2],

[3,2],2,3,4,[5,3],
[3,2],2,0,2,[5,1r2],[4,1r2],[1,1r2],[2,1r2],
%[3,2],2,0,2,[1,3],
[3,2],2,3,4,[5,2],4,
3,0,2,1,[0,3]
]).

tune(holyholyholy,[ %phrygian?

%holy holy
5,7,9,[12,5],
5,7,9,[12,5],
3,5,12,[14,5],
3,5,12,[14,5],

2,6,11,[16,5],
%2,8,13,[16,5],
2,8,[13,6],
5,7,12,[16,5],
5,9,[11,6],

1,8,10,[17,5],
1,9,11,17,
1,9,11,17,
8,10,12,[17,5],
8,11,13,[17,5],

5,11,14,[16,5],
5,9,14,[16,5],
[5,2],[9,2],[12,2],[14,10],

% ]).
%tune(x,[

%early in the morn
4,11,13,[16,5],
4,11,13,16,
4,11,13,16,
4,12,14,[16,5],
4,11,13,[16,5],

3,7,12,[19,5],
3,sharp(8),13,[19,5],
4,9,13,[18,5],
5,9,14,[16,5],

6,11,[13,6],
6,9,11,[16,5],
6,sharp(8),12,[17,5],
6,sharp(8),12,17,
2,9,11,16,

2,9,11,16,
2,9,11,16,
2,9,11,16,
2,9,11,16,

2,8,11,16,
2,8,11,16,
2,8,11,16,
2,8,11,16,

%2nd loop - holyholyholy

5,7,9,[12,5],
5,7,9,[12,5],
3,5,12,[14,5],
3,5,12,[14,5],

2,6,11,[16,5],
2,8,13,[16,5],
5,7,12,[16,5],
5,9,[11,6],

1,8,10,[17,5],
1,9,11,17,
1,9,11,17,
8,10,12,[17,5],
8,11,13,[17,5],

5,11,14,[16,5],
5,9,14,[16,5],
[5,2],[9,2],[12,2],[16,10],


%god in three
[3,2],7,8,[12,2],[19,10],
0,9,12,[16,5],
0,flat(11),12,[16,5],

[1,2],[10,2],[12,2],[17,10],
[5,2],[9,2],12,flat(11),[14,10],

1,8,11,[15,5],
1,8,11,[13,5],
2,9,11,[13,5],
2,9,11,13,
5,12,8,12,

5,8,12,12,8,5,
5,8,12,12,8,5,
5,8,12,12,8,5,
5,8,12,12,8,5,
5,8,12,12,8,5,
5,8,12,12,8,5

]).

modality([0,+2,+2,+1,+2,+2,+2,+1]).

%octave scale twelve-tet
ost(maj,[0,4,7]).
ost(min,[0,3,7]).
ost(maj7,[0,4,7,11]).

ost(ionian,    [0,2,4,5,7,9,11]).
ost(dorian,    [0,2,3,5,7,9,10]).
ost(phrygian,  [0,1,3,5,7,8,10]).
ost(lydian,    [0,2,4,6,7,9,11]).
ost(mixolydian,[0,2,4,5,7,9,10]).
ost(aeolian,   [0,2,3,5,7,8,10]).
ost(locrian,   [0,1,3,5,6,8,10]).

ost(pentatonic, [0,2,4,7,9]). % jesus loves me scale (pentatonic!)

