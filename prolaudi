#!/usr/bin/env swipl
% vim: ft=prolog:noet:ts=4:sw=4
:- initialization(main,main).
:- use_module(library(protobufs)),
   use_module(library(yall)).
:- set_stream(user_output,type(binary)).

rate(44100).
key(432).

%signal/3 - handles Len calculation
%signal([],_,_).
signal(S,Freq,Len):-
	rate(Rate),
	Samples is truncate(Rate*Len),
	signal(S,0,Samples,Freq).

%signal/4 - samples
signal([],S,S,_).
signal([Sample|T],SIndex,Samples,Freq):-
	rate(Rate),
	key(Key),
	Sample is sin( Freq * Key * SIndex / Rate *pi*2),
	SIndexN is SIndex+1,
	signal(T,SIndexN,Samples,Freq).

%signals/3 - sequence frequencies
signals([],[],_).
signals(S,[H|T],L):-
	(
	H=[F,M]
	->	(
		Time is M * L,
		Tone=F
	);(
		Time=L,
		Tone=H
	)
	),
	signal(Sa,Tone,Time),
	append(Sa,Sb,S),
	signals(Sb,T,L).
%signals(S,[H|T],L):-
%	signal(Sa,H,L),
%	append(Sa,Sb,S),
%	signals(Sb,T,L).
/*
 *
 */

modality([0,+2,+2,+1,+2,+2,+2,+1]).

%octave scale twelve-tet
ost(maj,[0,4,7]).
ost(min,[0,3,7]).
ost(maj7,[0,4,7,11]).

ost(ionian,    [0,2,4,5,7,9,11]).
ost(dorian,    [0,2,3,5,7,9,10]).
ost(phrygian,  [0,1,3,5,7,8,10]).
ost(lydian,    [0,2,4,6,7,9,11]).
ost(mixolydian,[0,2,4,5,7,9,10]).
ost(aeolian,   [0,2,3,5,7,8,10]).
ost(locrian,   [0,1,3,5,6,8,10]).

ost(ionianjlm, [0,2,4,7,9,11]). % jesus loves me scale, ionian X lydian

%ost frequency map
ostfm([[Hout,L]|Tout],[[Hin,L]|Tin]):-
	Hout is 2 ** (Hin / 12),
	ostfm(Tout,Tin).
ostfm([Hout|Tout],[Hin|Tin]):-
	Hout is 2 ** (Hin / 12),
	ostfm(Tout,Tin).
ostfm([],[]).
	
%Freqs,Notes,Ost
notes([[Hf,L]|Tf],[[Hn,L]|Tn],Ost):-
	ost(Ost,O),
	length(O,Ol),
	Octave is div(Hn,Ol),
	Offset is mod(Hn,Ol),
	nth0(Offset,O,Ostval),
	Hf is Octave*12 + Ostval,
	notes(Tf,Tn,Ost).
notes([Hf|Tf],[Hn|Tn],Ost):-
	ost(Ost,O),
	length(O,Ol),
	Octave is div(Hn,Ol),
	Offset is mod(Hn,Ol),
	nth0(Offset,O,Ostval),
	Hf is Octave*12 + Ostval,
	notes(Tf,Tn,Ost).
notes([],[],_).


pfs([]).
pfs([H|T]):-
	protobufs:float32_codes(H,C),
	maplist(put_byte(user_output),C),
	pfs(T).

tune(jesuslovesme,[
	0,-2,-2,-3, -2,0,0,0, 1,1,3,1,     1,0,0,0,
	0,-2,-2,-3, -2,0,0,0, 1,1,0,-4,   -2,-3,-4,-4,
	0,0,-2,0,   1,3,3,3,  0,0,-2,-4,  -2,-3,-3,-3,
	0,0,-2,0,   1,3,3,1,  0,-4,-2,-3, -4,-4,-4
]).

tune(jesuslovesme_off,[
4,2,2,1,2,4,4,4,5,5,7,5,5,4,4,4,4,2,2,1,2,4,4,4,5,5,4,0,2,1,0,0,4,4,2,4,5,7,7,7,4,4,2,0,2,1,1,1,4,4,2,4,5,7,7,5,4,0,2,1,0,0,0
]).

tune(jesuslovesme_scaled,[
3,2,2,1,2,3,3,3,4,4,6,4,4,3,3,3,3,2,2,1,2,3,3,3,4,4,3,0,2,1,0,0,3,3,2,3,4,6,6,6,3,3,2,0,2,1,1,1,3,3,2,3,4,6,6,4,3,0,2,1,0,0,0
]).

tune(jesuslovesme_st,[ %scaled, timed
3,2,2,1,2,3,[3,2],
4,4,6,4,4,3,[3,2],
3,2,2,1,2,3,[3,2],
4,4,3,0,2,1,[0,2],

[3,2],2,3,4,[6,3],
[3,2],2,0,2,[1,3],
[3,2],2,3,4,[6,2],4,
3,0,2,1,[0,3]
]).
%
main(_):-
	Len is 10.0,
	get_time(StartTime),

	tune(jesuslovesme_st,Tune),
	notes(N,Tune,ionianjlm),
	ostfm(F,N),
	signals(S,F,0.4),

	pfs(S),
	
	get_time(EndTime),
	TakenTime is EndTime-StartTime,
	Rate is Len / TakenTime,
	write(user_error,'Time taken: '),
	writeln(user_error,TakenTime),
	write(user_error,'Rate: '),
	writeln(user_error,Rate).
